# Generated by Django 4.1 on 2023-04-05 15:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(default='', max_length=254)),
                ('username', models.CharField(default='', max_length=12)),
                ('nickname', models.CharField(default='', max_length=10)),
                ('avatar_url', models.URLField(default='', max_length=255)),
                ('introduction', models.CharField(default='', max_length=30)),
                ('display_works', models.BooleanField(default=True)),
                ('display_collections', models.BooleanField(default=True)),
                ('follow_count', models.IntegerField(default=0)),
                ('fan_count', models.IntegerField(default=0)),
                ('post_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'db_table': 'account',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Ci',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rhythmic', models.CharField(max_length=150)),
                ('dynasty', models.CharField(max_length=10)),
                ('author', models.CharField(max_length=50)),
                ('complete', models.BooleanField(blank=True, default=True, null=True)),
                ('content', models.TextField()),
                ('three_hundred', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'db_table': 'ci',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('dynasty', models.CharField(blank=True, max_length=10, null=True)),
                ('author', models.CharField(blank=True, max_length=50, null=True)),
                ('content', models.CharField(blank=True, max_length=100, null=True)),
                ('fly_number', models.BooleanField()),
                ('fly_season', models.BooleanField()),
                ('fly_position', models.BooleanField()),
                ('fly_weather', models.BooleanField()),
                ('fly_color', models.BooleanField()),
                ('fly_wine_vessel', models.BooleanField()),
                ('fly_reduplicate', models.BooleanField()),
            ],
            options={
                'db_table': 'fly',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Shi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('dynasty', models.CharField(max_length=10)),
                ('author', models.CharField(max_length=50)),
                ('content', models.TextField()),
                ('yan', models.IntegerField(blank=True, null=True)),
                ('rhyme_type', models.IntegerField()),
                ('rhyme', models.CharField(blank=True, max_length=20, null=True)),
                ('metric', models.BooleanField(blank=True, default=False, null=True)),
                ('jue', models.IntegerField(blank=True, default=3, null=True)),
                ('qi', models.BooleanField(blank=True, default=True, null=True)),
                ('ru', models.BooleanField(blank=True, default=False, null=True)),
                ('three_hundred', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'db_table': 'shi',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Shijing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=5)),
                ('section', models.CharField(max_length=6)),
                ('chapter', models.CharField(max_length=4)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'shijing',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WordFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dynasty', models.IntegerField()),
                ('word', models.CharField(max_length=20)),
                ('word_len', models.IntegerField()),
                ('phrase', models.CharField(max_length=5)),
                ('num', models.IntegerField()),
            ],
            options={
                'db_table': 'word_frequency',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=10, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('display', models.BooleanField(default=True)),
                ('topping', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_author', to='main.account')),
            ],
            options={
                'verbose_name': 'Work',
                'verbose_name_plural': 'Works',
                'db_table': 'work',
                'ordering': ['-topping', '-create_date'],
            },
        ),
        migrations.CreateModel(
            name='ShiCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shi_collection_authors', to='main.account')),
                ('shi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shi_collection_shis', to='main.shi')),
            ],
            options={
                'verbose_name': 'ShiCollection',
                'verbose_name_plural': 'ShiCollections',
                'db_table': 'shi_collection',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default='', max_length=255)),
                ('like_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_author', to='main.account')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'db_table': 'post',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_like_authors', to='main.account')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_likes', to='main.post')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'db_table': 'like',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('fan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fan', to='main.account')),
                ('follow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='follow', to='main.account')),
            ],
            options={
                'verbose_name': 'Follow',
                'verbose_name_plural': 'Follows',
                'db_table': 'follow',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(default='', max_length=255)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_comment_authors', to='main.account')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comments', to='main.post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'db_table': 'comment',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='CiCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ci_collection_authors', to='main.account')),
                ('ci', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ci_collection_cis', to='main.ci')),
            ],
            options={
                'verbose_name': 'CiCollection',
                'verbose_name_plural': 'CiCollections',
                'db_table': 'ci_collection',
                'ordering': ['-create_date'],
            },
        ),
        migrations.AddField(
            model_name='account',
            name='follows',
            field=models.ManyToManyField(related_name='fans', through='main.Follow', to='main.account'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
